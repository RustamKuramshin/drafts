
fun <T> (suspend () -> T).createCoroutineUnintercepted(completion: Continuation<T>): Continuation<Unit>

suspend fun <T> suspendCoroutineUninterceptedOrReturn(block: (Continuation<T>) -> Any?): T

fun <T> (suspend () -> T).startCoroutineUninterceptedOrReturn(completion: Continuation<T>): Any?

fun <T> Continuation<T>.intercepted(): Continuation<T>

fun <R, T> (suspend R.() -> T).createCoroutineUnintercepted(completion: Continuation<T>): Continuation<Unit>

fun <T> (suspend R.() -> T).startCoroutineUninterceptedOrReturn(completion: Continuation<T>): Any?


